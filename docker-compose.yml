version: '3.9'

services:
  backend:
    container_name: backend-service
    build:
      context: ./backend-workout-tracker
    ports:
      - "8000:8000"
    volumes:
      - ./backend-workout-tracker:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - NODE_ENV=${NODE_ENV}
      - MONGODB_URI=${MONGODB_URI}
    depends_on:
      - mongo
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    container_name: frontend-service
    build:
      context: ./client-workout-tracker
    ports:
      - "3000:3000"
    volumes:
      - ./client-workout-tracker:/app
      - /app/node_modules
      - ./client-workout-tracker/.next:/app/.next
    environment:
      - NODE_ENV=${NODE_ENV}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    command: npm run dev

  mongo:
    container_name: mongo-db
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}

volumes:
  mongo-data:
